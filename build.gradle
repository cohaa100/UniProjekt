import com.github.spotbugs.snom.SpotBugsReport

plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.github.spotbugs" version "4.6.0"
    id 'pmd'
    id 'java'
}

pmd {
    toolVersion="6.29.0"
    ruleSets = []
//    ruleSets=[
//            "category/java/errorprone.xml",
//            "category/java/bestpractices.xml",
//            "category/java/codestyle.xml",
//            "category/java/design.xml",
//            "category/java/multithreading.xml",
//            "category/java/performance.xml",
//            "category/java/security.xml"
//    ]

    ruleSetFiles = files("${rootDir}/config/pmd/pmd.xml")
    sourceSets = [sourceSets.main]
}

spotbugs {
    effort = "max"
}

spotbugsMain {
    reports(({
        html.enabled = true
        xml.enabled = false
    } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
}

spotbugsTest {
    reports(({
        html.enabled = true
        xml.enabled = false
    } as Closure<NamedDomainObjectContainer<? extends SpotBugsReport>>))
}
bootRun {
    systemProperty "spring.profiles.active", "${project.properties['profile'] ?: 'prod'}"
}

group = 'propraganda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'com.tngtech.archunit:archunit-junit5:0.14.1'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation group: 'org.kohsuke', name: 'github-api', version: '1.123'
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version:'2.12.2'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version:'2.12.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.10.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.10.5'
    implementation 'com.google.guava:guava:30.1-jre'
    implementation 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}
